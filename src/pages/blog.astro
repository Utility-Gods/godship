---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";

// Get all blog posts that are not drafts
const posts = (await getCollection("blog", ({ data }) => !data.draft)).sort(
  (a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf()
);

// Get unique categories
const categories = [...new Set(posts.map((post) => post.data.category))];
---

<Layout title="Blog">
  <Container>
    <Sectionhead>
      <Fragment slot="title">Our Blog</Fragment>
      <Fragment slot="desc">
        We write about development, design, and building great products. ({posts.length} posts published)
      </Fragment>
    </Sectionhead>

    <div class="mt-16">
      <!-- Category Filter -->
      <div class="flex flex-wrap gap-3 mb-8">
        <button
          class="category-filter px-4 py-1 text-sm rounded-full border border-red-200 text-red-600 hover:bg-red-50 transition-colors data-[active=true]:bg-red-500 data-[active=true]:text-white data-[active=true]:border-red-500"
          data-category="all"
          data-active="true">
          All
        </button>
        {
          categories.map((category) => (
            <button
              class="category-filter px-4 py-1 text-sm rounded-full border border-red-200 text-red-600 hover:bg-red-50 transition-colors"
              data-category={category}>
              {category}
            </button>
          ))
        }
      </div>

      <!-- Blog Grid -->
      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-10">
        {
          posts.map((post) => (
            <div
              class="blog-card group"
              data-category={post.data.category.toLowerCase()}>
              <a href={`/blog/${post.slug}`}>
                <div class="relative">
                  <img
                    src={post.data.image}
                    alt={post.data.title}
                    width={400}
                    height={250}
                    class="rounded-xl transition group-hover:scale-105"
                  />
                  <span class="absolute top-4 right-4 bg-white/90 px-3 py-1.5 rounded text-sm font-medium text-red-500">
                    {post.data.category}
                  </span>
                </div>

                <div class="mt-4">
                  <h2 class="text-xl font-semibold group-hover:text-red-500 transition">
                    {post.data.title}
                  </h2>
                  <p class="text-gray-600 mt-2 line-clamp-2">
                    {post.data.excerpt}
                  </p>

                  <div class="flex gap-2 mt-3 items-center text-gray-500 text-sm">
                    <span>
                      <Icon name="ph:user-bold" class="w-4 h-4 inline-block" />
                      {post.data.author}
                    </span>
                    <span>â€¢</span>
                    <time datetime={post.data.publishDate.toISOString()}>
                      <Icon
                        name="ph:calendar-bold"
                        class="w-4 h-4 inline-block"
                      />
                      {post.data.publishDate.toLocaleDateString("en-us", {
                        year: "numeric",
                        month: "short",
                        day: "numeric",
                      })}
                    </time>
                  </div>
                </div>
              </a>
            </div>
          ))
        }
      </div>
    </div>
  </Container>
</Layout>


<script>
  // Category filtering
  const categoryButtons = document.querySelectorAll(".category-filter");
  const blogCards = document.querySelectorAll(".blog-card");

  categoryButtons.forEach((button) => {
    button.addEventListener("click", () => {
      // Update active state
      categoryButtons.forEach((btn) =>
        btn.setAttribute("data-active", "false")
      );
      button.setAttribute("data-active", "true");

      const selectedCategory = button
        .getAttribute("data-category")
        ?.toLowerCase();

      blogCards.forEach((card) => {
        const cardCategory = card.getAttribute("data-category")?.toLowerCase();

        if (selectedCategory === "all" || selectedCategory === cardCategory) {
          card.classList.remove("hidden");
        } else {
          card.classList.add("hidden");
        }
      });
    });
  });
</script>
